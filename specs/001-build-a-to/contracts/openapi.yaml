openapi: 3.0.0
info:
  title: Todo List API
  version: '1.0'
  description: API for managing todo tasks

paths:
  /tasks:
    get:
      summary: List all tasks
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum: [PENDING, COMPLETED]
        - name: priority
          in: query
          schema:
            type: string
            enum: [HIGH, MEDIUM, LOW]
        - name: sort_by
          in: query
          schema:
            type: string
            enum: [due_date, priority, display_order]
      responses:
        '200':
          description: List of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'

    post:
      summary: Create a new task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskCreate'
      responses:
        '201':
          description: Task created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '422':
          description: Validation error

  /tasks/{task_id}:
    parameters:
      - name: task_id
        in: path
        required: true
        schema:
          type: string
          format: uuid

    get:
      summary: Get task by ID
      responses:
        '200':
          description: Task details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          description: Task not found

    put:
      summary: Update task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskUpdate'
      responses:
        '200':
          description: Task updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          description: Task not found
        '422':
          description: Validation error

    delete:
      summary: Delete task
      responses:
        '204':
          description: Task deleted
        '404':
          description: Task not found

  /tasks/reorder:
    post:
      summary: Reorder tasks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - task_ids
              properties:
                task_ids:
                  type: array
                  items:
                    type: string
                    format: uuid
                  description: Ordered list of task IDs
      responses:
        '200':
          description: Tasks reordered
        '422':
          description: Validation error

components:
  schemas:
    PriorityLevel:
      type: string
      enum: [HIGH, MEDIUM, LOW]

    TaskStatus:
      type: string
      enum: [PENDING, COMPLETED]

    TaskCreate:
      type: object
      required:
        - title
      properties:
        title:
          type: string
          maxLength: 200
        description:
          type: string
          maxLength: 1000
        due_date:
          type: string
          format: date-time
        priority:
          $ref: '#/components/schemas/PriorityLevel'

    TaskUpdate:
      type: object
      properties:
        title:
          type: string
          maxLength: 200
        description:
          type: string
          maxLength: 1000
        due_date:
          type: string
          format: date-time
        priority:
          $ref: '#/components/schemas/PriorityLevel'
        status:
          $ref: '#/components/schemas/TaskStatus'

    Task:
      type: object
      required:
        - id
        - title
        - status
        - priority
        - display_order
        - created_at
        - updated_at
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
          maxLength: 200
        description:
          type: string
          maxLength: 1000
        due_date:
          type: string
          format: date-time
        priority:
          $ref: '#/components/schemas/PriorityLevel'
        status:
          $ref: '#/components/schemas/TaskStatus'
        display_order:
          type: integer
          minimum: 0
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time